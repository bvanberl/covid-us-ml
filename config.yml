PATHS:
  RAW_DATA: 'data/covid_external_val/'         # Path to folder containing all raw data
  COVID_DATA: 'data/covid_external_val/raw_covid'        # Path to COVID raw data
  NCOVID_DATA: 'data/covid_external_val/raw_ncovid'      # Path to NCOVID raw data
  SMOOTH_DATA: 'data/covid_external_val/raw_smooth'      # Path to SMOOTH raw data
  PROCESSED_DATA: 'data/preprocessed/'
  FRAMES_PATH: 'data/covid_external_val/frames'
  TRAIN_SET: 'data/preprocessed/train_set.csv'
  TEST1_SET: 'data/preprocessed/test1_set.csv'
  TEST2_SET: 'data/preprocessed/test2_set.csv'
  OTTAWA_SET: 'data/preprocessed/ottawa_test_set.csv'
  ENCOUNTERS_TRAINVAL: 'data/preprocessed/encounters_trainval.csv'
  ENCOUNTERS_OTTAWA: 'data/preprocessed/encounters_ottawa.csv'
  ENCOUNTERS_TEST1: 'data/preprocessed/encounters_test1.csv'
  ENCOUNTERS_TEST2: 'data/preprocessed/encounters_test2.csv'
  GEN_IMAGES: 'documents/generated_images/'
  LOGS: 'results/logs/'
  IMAGES: 'documents/generated_images/ottawa heatmaps/'
  MODEL_WEIGHTS: 'results/models/'
  MODEL_TO_LOAD: 'results/models/finalmodel.h5'
  OUTPUT_CLASS_INDICES: './data/serializations/output_class_indices.pkl'
  BATCH_PREDS: 'results/predictions/'
  METRICS: './results/metrics/'

DATA:
  IMG_DIM: [600, 600]
  VAL_SPLIT: 0.08
  TEST1_SPLIT: 0.08
  TEST2_SPLIT: 0.08
  #CLASSES: ['THICK', 'SMOOTH']                   # Classes for binary classification
  CLASSES: ['COVID', 'NCOVID', 'SMOOTH']          # Classes for multiclass classification

TRAIN:
  MODEL_DEF: 'xception'                                # One of {'resnet50v2', 'resnet101v2', 'inceptionv3', 'vgg16', 'mobilenetv2', 'inceptionresnetv2', 'xception', 'custom_resnet', 'custom_ffcnn'}
  #CLASS_MULTIPLIER: [1.0, 1.0]                         # Class multiplier for binary classification
  CLASS_MULTIPLIER: [1.0, 1.0, 1.0]                       # Class multiplier for multiclass classification
  EXPERIMENT_TYPE: 'single_train'                           # One of {'single_train', 'multi_train', 'hparam_search'}
  BATCH_SIZE: 16
  EPOCHS: 300
  PATIENCE: 3
  METRIC_PREFERENCE: ['auc', 'recall', 'precision', 'loss']
  NUM_RUNS: 10
  NUM_GPUS: 1
  MIXED_PRECISION: false                         # Necessary for training with Tensor Cores

NN:
  RESNET50V2:
    NODES_DENSE0: 1024
    NODES_DENSE1: 32
    LR: 0.00001
    DROPOUT: 0.6
    L2_LAMBDA: 0.01
    OPTIMIZER: 'adam'
  RESNET101V2:
    NODES_DENSE0: 1024
    NODES_DENSE1: 32
    LR: 0.000001
    DROPOUT: 0.5
    L2_LAMBDA: 0.01
  INCEPTIONV3:
    NODES_DENSE0: 32
    NODES_DENSE1: 16
    LR: 0.0001
    DROPOUT: 0.5
    L2_LAMBDA: 0.001
    OPTIMIZER: 'adam'
  VGG16:
    NODES_DENSE0: 128
    NODES_DENSE1: 32
    LR: 0.000001
    DROPOUT: 0.6
    L2_LAMBDA: 0.01
    FROZEN_LAYERS: [1,2]                   #layers to freeze in base model to freeze {1,2,4,5,7,8,9,11,12,13,15,16,17}
    L2_LAYERS: []
  MOBILENETV2:
    NODES_DENSE0: 128
    NODES_DENSE1: 16
    LR: 0.000001
    DROPOUT: 0.5
    L2_LAMBDA: 0.0001
    OPTIMIZER: 'adam'
  INCEPTIONRESNETV2:
    NODES_DENSE0: 64
    NODES_DENSE1: 16
    LR: 0.0001
    DROPOUT: 0.5
    L2_LAMBDA: 0.001
    FROZEN_LAYERS: []
    OPTIMIZER: 'adam'
  XCEPTION:
    NODES_DENSE0: 64
    NODES_DENSE1: 16
    LR: 0.000001
    DROPOUT: 0.6
    L2_LAMBDA: 0.001
    OPTIMIZER: 'adam'
    FROZEN_LAYERS: []
    L2_LAYERS: []
    FROZEN_LAYERS: []
  CUSTOM_RESNET:
    KERNEL_SIZE: (3,3)
    STRIDES: (2,2)
    INIT_FILTERS: 8
    FILTER_EXP_BASE: 2
    MAXPOOL_SIZE: (2,2)
    RES_BLOCKS: 1
    NODES_DENSE0: 128
    NODES_DENSE1: 32
    LR: 0.00001
    OPTIMIZER: 'adam'
    DROPOUT: 0.3
    L2_LAMBDA: 0.001
  CUSTOM_FFCNN:
    KERNEL_SIZE: (3,3)
    STRIDES: (2,2)
    INIT_FILTERS: 32
    FILTER_EXP_BASE: 2
    MAXPOOL_SIZE: (2,2)
    BLOCKS: 5
    NODES_DENSE0: 64
    NODES_DENSE1: 16
    LR: 0.001
    OPTIMIZER: 'adam'
    DROPOUT: 0.5
    L2_LAMBDA: 0.00001

HP_SEARCH:
  METRICS: ['accuracy', 'loss', 'recall', 'precision', 'auc']
  COMBINATIONS: 50
  REPEATS: 2
  RANGES:
    KERNEL_SIZE: ['(3,3)', '(5,5)']     # Discrete range
    MAXPOOL_SIZE: ['(2,2)', '(3,3)']    # Discrete range
    INIT_FILTERS: [8, 16, 32]           # Discrete range
    FILTER_EXP_BASE: [2, 3]             # Int range
    NODES_DENSE0: [128, 256, 512, 1024] # Discrete range
    NODES_DENSE1: [32, 64]              # Discrete range
    RES_BLOCKS: [3, 8]                 # Int range
    DROPOUT: [0.2, 0.4]                 # Real range
    LR: [-5.0, -3.0]                    # Real range on log scale (10^x)
    L2_LAMBDA: [-5.0, -4.0]             # Real range on log scale (10^x)
    BATCH_SIZE: [32, 64]                # Discrete range

